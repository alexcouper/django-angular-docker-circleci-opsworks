machine:
  environment:
    DJANGO_TEST_MODE: 1
  timezone:
    Europe/London
  python:
    version: 3.4.0
  services:
    - docker

dependencies:
  pre:
    - pip3 install -r review/requirements/base.txt
    - pip3 install -r review/requirements/test.txt
    - pip3 install -r review/requirements/deployment.txt

database:
  override:
    #Â Keep the Postgres version in step with that at AWS RDS (currently 9.3)
    - docker pull postgres:9.3
    - docker run -d --name postgres postgres:9.3

test:
  pre:
    - docker pull $DOCKER_LOG_ROUTER_IMAGE_NAME
    - docker run -d -h "review_circleci_logs" -v=/var/run/docker.sock:/tmp/docker.sock $DOCKER_LOG_ROUTER_IMAGE_NAME syslog://$LOG_AGGREGATE_HOST:$LOG_AGGREGATE_PORT
    - docker build -t $DOCKERHUB_APP_IMAGE_NAME:$DOCKERHUB_APP_IMAGE_TAG .
    - python3 review/manage.py collectstatic --noinput
    - docker build -t $DOCKERHUB_STATIC_IMAGE_NAME:$DOCKERHUB_STATIC_IMAGE_TAG static_build/
    # Prep a database for the Protractor (browser) tests
    - docker run --link postgres:postgres -e "DJANGO_DB_HOST=postgres" -e "DJANGO_DB_NAME=postgres" -e "DJANGO_DB_USER=postgres" $DOCKERHUB_APP_IMAGE_NAME:$DOCKERHUB_APP_IMAGE_TAG python3 manage.py syncdb --noinput
    - docker run --link postgres:postgres -e "DJANGO_DB_HOST=postgres" -e "DJANGO_DB_NAME=postgres" -e "DJANGO_DB_USER=postgres" $DOCKERHUB_APP_IMAGE_NAME:$DOCKERHUB_APP_IMAGE_TAG python3 manage.py migrate --noinput
    - docker run -d -p 80:80 --name review_circleci_app --link postgres:postgres -e "DJANGO_STATIC_URL=http://127.0.0.1:8080/" -e "DJANGO_ALLOWED_HOST=127.0.0.1" -e "DJANGO_DB_HOST=postgres" -e "DJANGO_DB_NAME=postgres" -e "DJANGO_DB_USER=postgres" $DOCKERHUB_APP_IMAGE_NAME:$DOCKERHUB_APP_IMAGE_TAG
    - docker run -d -p 8080:80 --name review_circleci_static $DOCKERHUB_STATIC_IMAGE_NAME:$DOCKERHUB_STATIC_IMAGE_TAG
  override:
    - cd review; ./run_django_tests.sh
    - npm run protractor

deployment:
  hub:
    branch: circleci_poc
    commands:
      - envsubst < dockercfg.template > ~/.dockercfg
      - docker push $DOCKERHUB_STATIC_IMAGE_NAME:$DOCKERHUB_STATIC_IMAGE_TAG
      - docker push $DOCKERHUB_APP_IMAGE_NAME:$DOCKERHUB_APP_IMAGE_TAG
      # Deploy static first to avoid dependency problems
      - python3 deploy_to_opsworks.py static
      - python3 deploy_to_opsworks.py app
